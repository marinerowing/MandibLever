/*
 * Copyright (C) 2010 Mark Westneat, Kristopher Urie
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.fieldmuseum.biosync.mandibLever.gui;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import org.fieldmuseum.biosync.kinematics.Joint;
import org.fieldmuseum.biosync.mandibLever.model.Mandible;
import org.fieldmuseum.biosync.mandibLever.model.Specimen;

/**
 *
 * @author kurie
 */
public class OpenLeverResultsPanel extends javax.swing.JPanel {
    private Specimen specimen;

    /** Creates new form OpenLeverResultsPanel */
    public OpenLeverResultsPanel() {
        initComponents();
    }

    public void setSpecimen(Specimen specimen, final SimParamPanel paramPanel) {
        this.specimen = specimen;
        updateFields(paramPanel.getOpenDur());
        
        Mandible.addStaticPropertyChangeListener(new PropertyChangeListener() {
            public void propertyChange(PropertyChangeEvent evt) {
                if (evt.getPropertyName().equals("maxRotation")) {
                    updateFields(paramPanel.getOpenDur());
                }
            }
        });

        paramPanel.addPropertyChangeListener(new PropertyChangeListener() {
            public void propertyChange(PropertyChangeEvent evt) {
                if (evt.getPropertyName().equals("openDur")) {
                    updateFields(paramPanel.getOpenDur());
                }
            }
        });
    }

    private void updateFields(double openDur) {
        Joint openInsertion = specimen.getMandible().getIomLigamentInsertion();
        dfMA.setValue(specimen.getMandible().getMechanicalAdvantage(openInsertion));
        dfVR.setValue(1.0 / specimen.getMandible().getMechanicalAdvantage(openInsertion));
        dfAngV.setValue(Math.toDegrees(-Mandible.getMaxRotation()) / openDur);
        double gape = Math.abs(2 * specimen.getMandible().getOutLever() * Math.sin(Mandible.getMaxRotation())/2);
        dfTipV.setValue(gape / openDur);
        dfGape.setValue(gape);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dfMA = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        jLabel3 = new javax.swing.JLabel();
        dfVR = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        jLabel4 = new javax.swing.JLabel();
        dfAngV = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        jLabel5 = new javax.swing.JLabel();
        dfTipV = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        jLabel6 = new javax.swing.JLabel();
        dfGape = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Results: Open Lever");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        add(jLabel1, gridBagConstraints);

        jLabel2.setText("MA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel2, gridBagConstraints);

        dfMA.setColumns(6);
        dfMA.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        add(dfMA, gridBagConstraints);

        jLabel3.setText("VR");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel3, gridBagConstraints);

        dfVR.setColumns(6);
        dfVR.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        add(dfVR, gridBagConstraints);

        jLabel4.setText("AngV");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        add(jLabel4, gridBagConstraints);

        dfAngV.setColumns(6);
        dfAngV.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        add(dfAngV, gridBagConstraints);

        jLabel5.setText("TipV");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        add(jLabel5, gridBagConstraints);

        dfTipV.setColumns(6);
        dfTipV.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        add(dfTipV, gridBagConstraints);

        jLabel6.setText("Gape");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        add(jLabel6, gridBagConstraints);

        dfGape.setColumns(6);
        dfGape.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        add(dfGape, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField dfAngV;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField dfGape;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField dfMA;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField dfTipV;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField dfVR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables

}
