/*
 * Copyright (C) 2010 Mark Westneat, Kristopher Urie
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.fieldmuseum.biosync.mandibLever.gui;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import org.fieldmuseum.biosync.biomechanics.muscle.Muscle;
import org.fieldmuseum.biosync.mandibLever.model.MandibLeverMuscle;
import org.fieldmuseum.biosync.mandibLever.model.Mandible;
import org.fieldmuseum.biosync.mandibLever.model.Specimen;

/**
 *
 * @author kgu
 */
public class KinematicResultPanel extends javax.swing.JPanel {
    Specimen specimen;
    SimParamPanel paramPanel;

    /** Creates new form KinematicResultPanel */
    public KinematicResultPanel() {
        initComponents();
    }

    public void setSpecimen(Specimen specimen, SimParamPanel paramPanel) {
        this.specimen = specimen;
        this.paramPanel = paramPanel;

        specimen.addPropertyChangeListener(new PropertyChangeListener() {
            public void propertyChange(PropertyChangeEvent evt) {
                updateFields();
            }
        });

        updateSpecimen();
    }

    /**
     * Called when there's a new current specimen.  Assumes that the starting
     * orientation of the specimen's jaw is the closed position.
     */
    private void updateSpecimen() {
        Mandible mandible = specimen.getMandible();
        Muscle a2 = specimen.getA2();
        Muscle a3 = specimen.getA3();
        //save the current rotation before rotating the jaw
        double startingRotation = mandible.getRotation();

        //Lever MA
        a2MA.setValue(mandible.getMechanicalAdvantage(a2));
        a3MA.setValue(mandible.getMechanicalAdvantage(a3));

        //Velocity Ratio
        a2VR.setValue(1.0 / mandible.getMechanicalAdvantage(a2));
        a3VR.setValue(1.0 / mandible.getMechanicalAdvantage(a3));

        //Muscle Angle Closed
        a2MuscleAngleClosed.setValue(Math.toDegrees(mandible.getMuscleAngle(a2)));
        a3MuscleAngleClosed.setValue(Math.toDegrees(mandible.getMuscleAngle(a3)));

        //Muscle Angle Open
        double angle = -Math.toRadians(paramPanel.getMaxOpenAngle());
        mandible.setRotation(angle);
        a2MuscleAngleOpen.setValue(Math.toDegrees(mandible.getMuscleAngle(a2)));
        a3MuscleAngleOpen.setValue(Math.toDegrees(mandible.getMuscleAngle(a3)));

        //set the mandible back to its original orientation
        mandible.setRotation(startingRotation);

        updateFields();
    }

    /**
     * Called when the current specimen is changed
     */
    private void updateFields() {
        Mandible mandible = specimen.getMandible();
        MandibLeverMuscle a2 = specimen.getA2();
        MandibLeverMuscle a3 = specimen.getA3();

        //Lever EMA
        a2EMA.setValue(mandible.getEffectiveMechanicalAdvantage(a2));
        a3EMA.setValue(mandible.getEffectiveMechanicalAdvantage(a3));


        //Closed Dur
        a2CloseDur.setValue(a2.velocityModel.getT() * 1000);
        a3CloseDur.setValue(a3.velocityModel.getT() * 1000);

        //Stretched L
        a2StretchedLength.setValue(a2.getLength());
        a3StretchedLength.setValue(a3.getLength());

        //LJ Rotation
        a2JawRotation.setValue(Math.toDegrees(-mandible.getRotation()));
        a3JawRotation.setValue(Math.toDegrees(-mandible.getRotation()));

        //Gape Closed
        a2GapeClosed.setValue(mandible.getGape());
        a3GapeClosed.setValue(mandible.getGape());

        //Ang V Out (in degrees/ms)
        a2AngularVelocityOut.setValue(Math.toDegrees(mandible.getAngularVelocity(a2)) / 1000);
        a3AngularVelocityOut.setValue(Math.toDegrees(mandible.getAngularVelocity(a3)) / 1000);

        //Tip V Out (in cm/ms)
        a2TipVelocityOut.setValue(mandible.getTipVelocity(a2) / 1000);
        a3TipVelocityOut.setValue(mandible.getTipVelocity(a3) / 1000);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        specimenPanel1 = new org.fieldmuseum.biosync.mandibLever.gui.SpecimenPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        a2MA = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        a3MA = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        jLabel5 = new javax.swing.JLabel();
        a2EMA = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        a3EMA = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        jLabel6 = new javax.swing.JLabel();
        a2VR = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        a3VR = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        jLabel7 = new javax.swing.JLabel();
        a2MuscleAngleClosed = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        a3MuscleAngleClosed = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        jLabel8 = new javax.swing.JLabel();
        a2MuscleAngleOpen = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        a3MuscleAngleOpen = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        jLabel9 = new javax.swing.JLabel();
        a2CloseDur = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        a3CloseDur = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        jLabel10 = new javax.swing.JLabel();
        a2StretchedLength = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        a3StretchedLength = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        jLabel11 = new javax.swing.JLabel();
        a2JawRotation = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        a3JawRotation = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        jLabel12 = new javax.swing.JLabel();
        a2GapeClosed = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        a3GapeClosed = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        jLabel13 = new javax.swing.JLabel();
        a2AngularVelocityOut = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        a3AngularVelocityOut = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        jLabel14 = new javax.swing.JLabel();
        a2TipVelocityOut = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();
        a3TipVelocityOut = new org.fieldmuseum.biosync.mandibLever.gui.DecimalField();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Results: Kinematics");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        add(jLabel1, gridBagConstraints);

        jLabel2.setText("A2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        add(jLabel2, gridBagConstraints);

        jLabel3.setText("A3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        add(jLabel3, gridBagConstraints);

        jLabel4.setText("Lever MA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel4, gridBagConstraints);

        a2MA.setColumns(6);
        a2MA.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        add(a2MA, gridBagConstraints);

        a3MA.setColumns(6);
        a3MA.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        add(a3MA, gridBagConstraints);

        jLabel5.setText("Lever EMA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel5, gridBagConstraints);

        a2EMA.setColumns(6);
        a2EMA.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        add(a2EMA, gridBagConstraints);

        a3EMA.setColumns(6);
        a3EMA.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        add(a3EMA, gridBagConstraints);

        jLabel6.setText("Velocity Ratio");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel6, gridBagConstraints);

        a2VR.setColumns(6);
        a2VR.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        add(a2VR, gridBagConstraints);

        a3VR.setColumns(6);
        a3VR.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        add(a3VR, gridBagConstraints);

        jLabel7.setText("Muscle Angle Closed");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel7, gridBagConstraints);

        a2MuscleAngleClosed.setColumns(6);
        a2MuscleAngleClosed.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        add(a2MuscleAngleClosed, gridBagConstraints);

        a3MuscleAngleClosed.setColumns(6);
        a3MuscleAngleClosed.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        add(a3MuscleAngleClosed, gridBagConstraints);

        jLabel8.setText("Muscle Angle Open");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel8, gridBagConstraints);

        a2MuscleAngleOpen.setColumns(6);
        a2MuscleAngleOpen.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        add(a2MuscleAngleOpen, gridBagConstraints);

        a3MuscleAngleOpen.setColumns(6);
        a3MuscleAngleOpen.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        add(a3MuscleAngleOpen, gridBagConstraints);

        jLabel9.setText("Close Dur (ms)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel9, gridBagConstraints);

        a2CloseDur.setColumns(6);
        a2CloseDur.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        add(a2CloseDur, gridBagConstraints);

        a3CloseDur.setColumns(6);
        a3CloseDur.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        add(a3CloseDur, gridBagConstraints);

        jLabel10.setText("Stretched L (cm)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel10, gridBagConstraints);

        a2StretchedLength.setColumns(6);
        a2StretchedLength.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        add(a2StretchedLength, gridBagConstraints);

        a3StretchedLength.setColumns(6);
        a3StretchedLength.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        add(a3StretchedLength, gridBagConstraints);

        jLabel11.setText("LJ Rotation (\u00B0)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel11, gridBagConstraints);

        a2JawRotation.setColumns(6);
        a2JawRotation.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        add(a2JawRotation, gridBagConstraints);

        a3JawRotation.setColumns(6);
        a3JawRotation.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        add(a3JawRotation, gridBagConstraints);

        jLabel12.setText("Gape Closed (cm)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel12, gridBagConstraints);

        a2GapeClosed.setColumns(6);
        a2GapeClosed.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        add(a2GapeClosed, gridBagConstraints);

        a3GapeClosed.setColumns(6);
        a3GapeClosed.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        add(a3GapeClosed, gridBagConstraints);

        jLabel13.setText("Ang V Out (\u00B0/ms)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel13, gridBagConstraints);

        a2AngularVelocityOut.setColumns(6);
        a2AngularVelocityOut.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        add(a2AngularVelocityOut, gridBagConstraints);

        a3AngularVelocityOut.setColumns(6);
        a3AngularVelocityOut.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        add(a3AngularVelocityOut, gridBagConstraints);

        jLabel14.setText("Tip V Out (cm/ms)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel14, gridBagConstraints);

        a2TipVelocityOut.setColumns(6);
        a2TipVelocityOut.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        add(a2TipVelocityOut, gridBagConstraints);

        a3TipVelocityOut.setColumns(6);
        a3TipVelocityOut.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        add(a3TipVelocityOut, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a2AngularVelocityOut;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a2CloseDur;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a2EMA;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a2GapeClosed;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a2JawRotation;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a2MA;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a2MuscleAngleClosed;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a2MuscleAngleOpen;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a2StretchedLength;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a2TipVelocityOut;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a2VR;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a3AngularVelocityOut;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a3CloseDur;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a3EMA;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a3GapeClosed;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a3JawRotation;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a3MA;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a3MuscleAngleClosed;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a3MuscleAngleOpen;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a3StretchedLength;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a3TipVelocityOut;
    private org.fieldmuseum.biosync.mandibLever.gui.DecimalField a3VR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private org.fieldmuseum.biosync.mandibLever.gui.SpecimenPanel specimenPanel1;
    // End of variables declaration//GEN-END:variables

}
